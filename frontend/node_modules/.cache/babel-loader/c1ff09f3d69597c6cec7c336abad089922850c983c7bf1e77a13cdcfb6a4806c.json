{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\praja\\\\Downloads\\\\fullapp\\\\frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  useEffect(() => {\n    if (theme === \"dark\") {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(ThemeProvider, \"lm84LOZxHN0YC4jzvAwAP/18Sno=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","theme","setTheme","document","documentElement","classList","add","remove","toggleTheme","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/praja/Downloads/fullapp/frontend/src/context/ThemeContext.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useState, useEffect } from \"react\"\r\n\r\nexport const ThemeContext = createContext()\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(\"light\")\r\n\r\n  useEffect(() => {\r\n    if (theme === \"dark\") {\r\n      document.documentElement.classList.add(\"dark\")\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\")\r\n    }\r\n  }, [theme])\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === \"light\" ? \"dark\" : \"light\")\r\n  }\r\n\r\n  return <ThemeContext.Provider value={{ theme, toggleTheme }}>{children}</ThemeContext.Provider>\r\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAT,EAAA;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,KAAK,MAAM,EAAE;MACpBE,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBN,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,oBAAOJ,OAAA,CAACC,YAAY,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK;MAAEO;IAAY,CAAE;IAAAR,QAAA,EAAEA;EAAQ;IAAAW,QAAA,EAAArB,YAAA;IAAAsB,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AACjG,CAAC;AAAAtB,EAAA,CAhBYQ,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}